/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router';

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as TranscriptsTranscriptIdImport } from './routes/transcripts.$transcriptId';

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')();

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route));

const TranscriptsTranscriptIdRoute = TranscriptsTranscriptIdImport.update({
  path: '/transcripts/$transcriptId',
  getParentRoute: () => rootRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof IndexLazyImport;
      parentRoute: typeof rootRoute;
    };
    '/transcripts/$transcriptId': {
      id: '/transcripts/$transcriptId';
      path: '/transcripts/$transcriptId';
      fullPath: '/transcripts/$transcriptId';
      preLoaderRoute: typeof TranscriptsTranscriptIdImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  TranscriptsTranscriptIdRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/transcripts/$transcriptId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/transcripts/$transcriptId": {
      "filePath": "transcripts.$transcriptId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
